DOCKER Hands on Lab 06. 

**Task List: Docker Image Creation and Deployment**
 
1. **Create Directories:**
   - Establish two directories named "DHUB" and "AWSECR."
 root@DESKTOP-DA2RDP0:GIT# mkdir DHUB
root@DESKTOP-DA2RDP0:GIT# mkdir AWSECR
root@DESKTOP-DA2RDP0:GIT#

2. **Dockerfile Creation:**

   - Develop two Dockerfiles to construct custom images with the following specifications:
     - Base image: Ubuntu
     - Install packages: httpd
     - Add "I am from Docker Hub" to the index.html file for DHUB directory and "I am from ECR" for AWSECR directory.
     - Set environment variable ENV_NAME=DHUB for the DHUB directory and ENV_NAME=AWSECR for the AWSECR directory.
  - Start http service using ENTRYPOINT 
  -  Expose port 80.

root@DESKTOP-DA2RDP0:harsh# cd GIT/
root@DESKTOP-DA2RDP0:GIT# mkdir DHUB
root@DESKTOP-DA2RDP0:GIT# mkdir AWSECR
root@DESKTOP-DA2RDP0:GIT#
root@DESKTOP-DA2RDP0:GIT#
root@DESKTOP-DA2RDP0:GIT# cd DHUB/
root@DESKTOP-DA2RDP0:DHUB#
root@DESKTOP-DA2RDP0:DHUB# vim Dockerfile
root@DESKTOP-DA2RDP0:DHUB# cat Dockerfile
FROM ubuntu:latest
RUN apt-get update
RUN apt-get install -y apache2
RUN echo "I am from Docker Hub" > /var/www/html/index.html
ENV ENV_NAME=DHUB
ENTRYPOINT ["apache2ctl", "-D", "FOREGROUND"]
EXPOSE 80
root@DESKTOP-DA2RDP0:DHUB#
root@DESKTOP-DA2RDP0:DHUB#
root@DESKTOP-DA2RDP0:DHUB# cd -
/home/harsh/GIT
root@DESKTOP-DA2RDP0:GIT#
root@DESKTOP-DA2RDP0:GIT# cd AWSECR/
root@DESKTOP-DA2RDP0:AWSECR# vim Dockerfile
root@DESKTOP-DA2RDP0:AWSECR# cat Dockerfile
FROM ubuntu
RUN apt-get update
RUN apt-get install -y apache2
RUN echo "I am from ECR" > /var/www/html/index.html
ENV ENV_NAME=AWSECR
ENTRYPOINT ["apache2ctl", "-D", "FOREGROUND"]
EXPOSE 80
root@DESKTOP-DA2RDP0:AWSECR#
 
3. **Build Custom Images:**

   - Utilize the docker build command to build the custom images.
   - List all available images using docker images.
root@DESKTOP-DA2RDP0:DHUB# docker image build -t dhub_img:v1 .
[+] Building 98.8s (8/8) FINISHED                                                                                     docker:default
 => [internal] load .dockerignore                                                                                               0.8s
 => => transferring context: 2B                                                                                                 0.0s
 => [internal] load build definition from Dockerfile                                                                            1.0s
 => => transferring dockerfile: 241B                                                                                            0.0s
 => [internal] load metadata for docker.io/library/ubuntu:latest                                                                0.0s
 => [1/4] FROM docker.io/library/ubuntu:latest                                                                                  1.1s
 => [2/4] RUN apt-get update                                                                                                   18.4s
 => [3/4] RUN apt-get install -y apache2                                                                                       72.4s
 => [4/4] RUN echo "I am from Docker Hub" > /var/www/html/index.html                                                            1.9s
 => exporting to image                                                                                                          3.0s
 => => exporting layers                                                                                                         2.9s
 => => writing image sha256:891d7f61962f48bc345cf87d804880e26bc7a03499c177242ec5853077d73ea6                                    0.0s
 => => naming to docker.io/library/dhub_img:v1                                                                                  0.1s
root@DESKTOP-DA2RDP0:DHUB# cd -
/root

root@DESKTOP-DA2RDP0:~# cd AWSECR
root@DESKTOP-DA2RDP0:AWSECR# docker image build -t awsecr_img:v2 .
[+] Building 3.1s (8/8) FINISHED                                                                                      docker:default
 => [internal] load build definition from Dockerfile                                                                            0.4s
 => => transferring dockerfile: 236B                                                                                            0.0s
 => [internal] load .dockerignore                                                                                               0.7s
 => => transferring context: 2B                                                                                                 0.0s
 => [internal] load metadata for docker.io/library/ubuntu:latest                                                                0.0s
 => [1/4] FROM docker.io/library/ubuntu:latest                                                                                  0.0s
 => CACHED [2/4] RUN apt-get update                                                                                             0.0s
 => CACHED [3/4] RUN apt-get install -y apache2                                                                                 0.0s
 => [4/4] RUN echo "I am from ECR" > /var/www/html/index.html                                                                   1.0s
 => exporting to image                                                                                                          0.6s
 => => exporting layers                                                                                                         0.5s
 => => writing image sha256:115017f78757ac003851677fe9fb719270d0ef2394ef136300f2b14310cb01d4                                    0.0s
 => => naming to docker.io/library/awsecr_img:v2                                                                                0.0s
root@DESKTOP-DA2RDP0:AWSECR#
root@DESKTOP-DA2RDP0:AWSECR#

 
4. **Push Images to Repositories:**

   - Push the Docker image to Docker Hub.
root@DESKTOP-DA2RDP0:~# cd DHUB/
root@DESKTOP-DA2RDP0:DHUB# docker image tag dhub_img:v1 harshitameshram/docker_images

root@DESKTOP-DA2RDP0:DHUB# docker image ls
REPOSITORY                                 TAG       IMAGE ID       CREATED         SIZE
awsecr_img                                 v2        115017f78757   5 minutes ago   331MB
harshitameshram/docker_images              latest    891d7f61962f   9 minutes ago   331MB
dhub_img                                   v1        891d7f61962f   9 minutes ago   331MB
docker-compose                             latest    74666a099534   3 days ago      149MB
nodejs                                     latest    74666a099534   3 days ago      149MB
haproxy                                    latest    b7cf7c4eeef2   3 days ago      123MB
ubuntu                                     latest    fc7bd375e0d2   3 days ago      261MB
httpd                                      latest    6fd77d7e5eb7   3 months ago    167MB
root@DESKTOP-DA2RDP0:DHUB#

root@DESKTOP-DA2RDP0:DHUB# docker image push  harshitameshram/docker_images
Using default tag: latest
The push refers to repository [docker.io/harshitameshram/docker_images]
a3d1ea001077: Pushed
55cfd274c6c5: Pushed
a3bdf15c54ab: Pushed
6089591e5cf3: Pushed
d3d1f7d3b964: Pushed
0a0f7067029e: Pushed
2f11aeb804c9: Pushed
a1360aae5271: Mounted from library/ubuntu
latest: digest: sha256:b969181d022d288f804e1d6fd3f0a2c60385467a74963ad0be90005be6bef320 size: 2006
root@DESKTOP-DA2RDP0:DHUB#

   - Push the Docker image to AWS ECR.
 
Ecr
Create repo 	
root@DESKTOP-DA2RDP0:AWSECR# aws configure
AWS Access Key ID [****************47O2]: 
AWS Secret Access Key [****************BPow]: 
Default region name [us-east-1]:
Default output format [json]:
root@DESKTOP-DA2RDP0:AWSECR#
root@DESKTOP-DA2RDP0:AWSECR# aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin id.dkr.ecr.us-east-1.amazonaws.com
WARNING! Your password will be stored unencrypted in /root/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store

Login Succeeded
root@DESKTOP-DA2RDP0:AWSECR#

root@DESKTOP-DA2RDP0:AWSECR# docker tag awsecr_img:v2 112365962865.dkr.ecr.us-east-1.amazonaws.com/awsecr:v2
root@DESKTOP-DA2RDP0:AWSECR# docker image push  112365962865.dkr.ecr.us-east-1.amazonaws.com/awsecr:v2
The push refers to repository [112365962865.dkr.ecr.us-east-1.amazonaws.com/awsecr]
9ec76ba2cf75: Pushed
55cfd274c6c5: Pushed
a3bdf15c54ab: Pushed
6089591e5cf3: Pushed
d3d1f7d3b964: Pushed
0a0f7067029e: Pushed
2f11aeb804c9: Pushed
a1360aae5271: Pushed
v2: digest: sha256:1564ce02d3cc72db311476333381819cce744d101003c9327eb62d30ba46cc38 size: 2006
root@DESKTOP-DA2RDP0:AWSECR#

5. **Run Containers:**

   - Execute a container from the Docker Hub image, naming it "I_AM_FROM_DHUB," and mapping host port 8081 to the container.
 
   ```
   docker run -d -p 8081:80 --name I_AM_FROM_DHUB your_docker_hub_image
   ```
root@DESKTOP-DA2RDP0:~# cd DHUB/
root@DESKTOP-DA2RDP0:DHUB# docker run -d -p 8081:80 --name I_AM_FROM_DHUB dhub_img:v1
25ae5d54ab79a689ae5409d574d445fef2129b9355eed79286a0bcdf1a26c247
root@DESKTOP-DA2RDP0:DHUB#
 
   - Execute a container from the AWS ECR image, naming it "I_AM_FROM_ECR," and mapping host port 8082 to the container.
 
   ```
   docker run -d -p 8082:80 --name I_AM_FROM_ECR your_aws_ecr_image
   ```
root@DESKTOP-DA2RDP0:DHUB# docker run -d -p 8082:80 --name I_AM_FROM_ECR awsecr_img:v2
febdaaa299590d70c8c157ca03187ad45245839114e9e1867779cc62c4a512e4
root@DESKTOP-DA2RDP0:DHUB#
 
6. **Access Pages from Browser:**

   - Open a web browser and access the pages:
     - For Docker Hub: http://localhost:8081
 


           - For AWS ECR: http://localhost:8082

 
 
This task list guides you through the process of creating custom Docker images, pushing them to Docker Hub and AWS ECR, running containers, and accessing the pages from a browser.


